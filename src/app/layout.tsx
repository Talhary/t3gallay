import "~/styles/globals.css";
import "@uploadthing/react/styles.css";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { extractRouterConfig } from "uploadthing/server";
 
import { ourFileRouter } from "~/app/api/uploadthing/core";
import {
  ClerkProvider,
  SignInButton,
  SignedIn,
  SignedOut,
  UserButton,
} from "@clerk/nextjs";
import { Inter } from "next/font/google";
import Link from "next/link";
import { Themeroviders } from "./Themeproviders";
import { ThemeChange } from "components/theme";
const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default function RootLayout({
  children,
  modal,
}: {
  children: React.ReactNode;
  modal: React.ReactNode;
}) {
  return (
    <html lang="en" suppressHydrationWarning>
      <ClerkProvider>
        <Themeroviders>
          <body className={`font-sans ${inter.variable}`}>
            <nav className="flex items-center justify-between border-b bg-gray-900 p-4 text-white">
              <div className="relative flex items-center gap-x-3">
                <Link href="/" className="text-xl font-semibold  ">
                  Gallery
                </Link>

                <Link
                  href="/upload"
                  className="text-xl font-semibold text-white "
                >
                  Upload
                </Link>
                <div className="">
                  <ThemeChange />
                </div>
              </div>
              <div>
                <SignedOut>
                  <SignInButton />
                </SignedOut>
                <SignedIn>
                  <UserButton />
                </SignedIn>
              </div>
            </nav>
            <NextSSRPlugin
          /**
           * The `extractRouterConfig` will extract **only** the route configs
           * from the router to prevent additional information from being
           * leaked to the client. The data passed to the client is the same
           * as if you were to fetch `/api/uploadthing` directly.
           */
          routerConfig={extractRouterConfig(ourFileRouter)}
        />
            {children}
            {modal}
            <div id="modal-root" />
          </body>
        </Themeroviders>
      </ClerkProvider>
    </html>
  );
}
